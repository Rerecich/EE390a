<pragmas>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<65, false>::ap_int_base<33, false>(ap_int_base<33, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1494" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, false>::mult operator*<32, false, 32, false>(ap_int_base<32, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1494" pragmaType="inline" parentfunction="ap_int_base<64, false>::RType<32, false>::mult operator*<64, false, 32, false>(ap_int_base<64, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1494" pragmaType="inline" parentfunction="ap_int_base<96, false>::RType<32, false>::mult operator*<96, false, 32, false>(ap_int_base<96, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::operator++()" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<32, false>::ssdm_int(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 128, false>(int*, ap_int_base<128, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 96, false>(int*, ap_int_base<96, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 64, false>(int*, ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="21" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="22" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="numChannels" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="23" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="numFilters" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="24" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="inputWidth" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="25" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="inputHeight" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="26" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="convWidth" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="27" pragmaType="interface" parentfunction="Conv2D_HW" mode="s_axilite" port="convHeight" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="HLS_Legacy/conv2d.cpp" line="28" pragmaType="interface" parentfunction="Conv2D_HW" mode="m_axi" port="input" bundle="" offset="slave" name="" depth="200000" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="HLS_Legacy/conv2d.cpp" line="29" pragmaType="interface" parentfunction="Conv2D_HW" mode="m_axi" port="output" bundle="" offset="slave" name="" depth="200000" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="HLS_Legacy/conv2d.cpp" line="30" pragmaType="interface" parentfunction="Conv2D_HW" mode="m_axi" port="coeffs" bundle="" offset="slave" name="" depth="200000" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 32, false>(int*, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1494" pragmaType="inline" parentfunction="ap_int_base<33, false>::RType<32, false>::mult operator*<33, false, 32, false>(ap_int_base<33, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 65, false>(int*, ap_int_base<65, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 33, false>(int*, ap_int_base<33, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="541" pragmaType="inline" parentfunction="ap_int_base<32, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& ap_int_base<32, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1494" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<34, true>::mult operator*<32, false, 34, true>(ap_int_base<32, false> const&, ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1494" pragmaType="inline" parentfunction="ap_int_base<66, true>::RType<34, true>::mult operator*<66, true, 34, true>(ap_int_base<66, true> const&, ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 100, true>(int*, ap_int_base<100, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1541" pragmaType="inline" parentfunction="int* operator+<int, 66, true>(int*, ap_int_base<66, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<100, true>::ap_int_base<66, true>(ap_int_base<66, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<100, true>::ap_int_base<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<100, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<100>::ap_int<100, true>(ap_int_base<100, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi100ELb1EEC2EDq100_i" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<66, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<66, true>::ap_int_base<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<66, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi66ELb1EEC2EDq66_i" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<65, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<65, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<65>::ap_uint<65, false>(ap_int_base<65, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi65ELb0EEC2EDq65_j" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<33, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<33, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<33>::ap_uint<33, false>(ap_int_base<33, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb0EEC2EDq33_j" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="556" pragmaType="inline" parentfunction="to_int64" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<128, false>::ap_int_base<96, false>(ap_int_base<96, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<128, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<128, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<128>::ap_uint<128, false>(ap_int_base<128, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<128, false>::ssdm_int(unsigned __int128)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<96, false>::ap_int_base<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<96, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1026" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator<<32, false>(ap_int_base<32, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1633" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::minus operator-<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<96, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<96>::ap_uint<96, false>(ap_int_base<96, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi96ELb0EEC2EDq96_j" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1496" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, true>::minus operator-<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="185" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="214" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<34>::ap_int<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi34ELb1EEC2EDq34_i" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1495" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, false>::plus operator+<32, false, 32, false>(ap_int_base<32, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/scrap/users/Xilinx2022.2/Vitis_HLS/2022.2/common/technology/autopilot/ap_int_base.h" line="1026" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator<<34, true>(ap_int_base<34, true> const&) const" off="0" region="0" recursive="0"/>
</pragmas>
