remark: HLS_Legacy/conv2d.cpp:20:0: Inlining function 'FXP_Mult(int, int, unsigned int)' into 'Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>)'
remark: HLS_Legacy/conv2d.cpp:38:29: Sequential read of variable length has been inferred _XLX_SEP_ OldID=for.inc.load.11,  _XLX_SEP_ scevgepseq coeffs gmem VITIS_LOOP_38_5 HLS_Legacy/conv2d.cpp:38:29 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:39:31: Sequential read of variable length has been inferred _XLX_SEP_ OldID=for.inc.load.28,  _XLX_SEP_ scevgep1148seq input gmem VITIS_LOOP_39_6 HLS_Legacy/conv2d.cpp:39:31 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:34:25: Sequential write of variable length has been inferred _XLX_SEP_ OldID=for.inc64.store.6,  _XLX_SEP_ scevgep1150seq output gmem VITIS_LOOP_34_3 HLS_Legacy/conv2d.cpp:34:25 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:39:31: Stride is incompatible _XLX_SEP_ scevgep1148seq input gmem VITIS_LOOP_38_5 HLS_Legacy/conv2d.cpp:38:29 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:38:29: Stride is incompatible _XLX_SEP_ scevgepseq coeffs gmem VITIS_LOOP_37_4 HLS_Legacy/conv2d.cpp:37:27 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:34:25: Stride is incompatible _XLX_SEP_ scevgep1150seq output gmem VITIS_LOOP_33_2 HLS_Legacy/conv2d.cpp:33:23 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:34:25: Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgep1150seq output gmem VITIS_LOOP_34_3 HLS_Legacy/conv2d.cpp:34:25 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:38:29: Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgepseq coeffs gmem VITIS_LOOP_39_6 HLS_Legacy/conv2d.cpp:39:31 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:39:31: Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgep1148seq input gmem VITIS_LOOP_39_6 HLS_Legacy/conv2d.cpp:39:31 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:38:29: Could not burst due to multiple potential reads to the same bundle in the same region. _XLX_SEP_ seq1  gmem Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:34:25: Multiple burst writes of variable length and bit width 32 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq  gmem VITIS_LOOP_34_3 HLS_Legacy/conv2d.cpp:34:25 Conv2D_HW(int*, int*, int*, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>, ap_uint<32>) 
remark: HLS_Legacy/conv2d.cpp:34:25: Multiple burst writes of variable length and bit width 32 in loop 'VITIS_LOOP_34_3'(HLS_Legacy/conv2d.cpp:34:25) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
