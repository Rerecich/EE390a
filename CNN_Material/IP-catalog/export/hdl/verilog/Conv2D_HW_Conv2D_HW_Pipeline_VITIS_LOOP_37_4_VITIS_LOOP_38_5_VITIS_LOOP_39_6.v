// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_37_4_VITIS_LOOP_38_5_VITIS_LOOP_39_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        inputHeight_cast9,
        zext_ln34,
        convWidth_cast,
        mul_ln15_1,
        mul_ln15,
        mul_ln1027_1,
        tmp1,
        filters,
        tmp3_cast_mid144,
        convWidth,
        icmp_ln1027,
        inputWidth_cast10,
        x_V_cast13,
        input_r,
        acc_out,
        acc_out_ap_vld,
        grp_fu_291_p_din0,
        grp_fu_291_p_din1,
        grp_fu_291_p_dout0,
        grp_fu_291_p_ce,
        grp_fu_443_p_din0,
        grp_fu_443_p_din1,
        grp_fu_443_p_dout0,
        grp_fu_443_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [31:0] inputHeight_cast9;
input  [31:0] zext_ln34;
input  [31:0] convWidth_cast;
input  [95:0] mul_ln15_1;
input  [63:0] mul_ln15;
input  [61:0] mul_ln1027_1;
input  [61:0] tmp1;
input  [63:0] filters;
input  [31:0] tmp3_cast_mid144;
input  [31:0] convWidth;
input  [0:0] icmp_ln1027;
input  [31:0] inputWidth_cast10;
input  [31:0] x_V_cast13;
input  [63:0] input_r;
output  [31:0] acc_out;
output   acc_out_ap_vld;
output  [31:0] grp_fu_291_p_din0;
output  [31:0] grp_fu_291_p_din1;
input  [61:0] grp_fu_291_p_dout0;
output   grp_fu_291_p_ce;
output  [31:0] grp_fu_443_p_din0;
output  [31:0] grp_fu_443_p_din1;
input  [61:0] grp_fu_443_p_dout0;
output   grp_fu_443_p_ce;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg acc_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
reg    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln1027_1_fu_328_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
reg    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
wire   [61:0] x_V_cast13_cast_fu_247_p1;
reg   [61:0] x_V_cast13_cast_reg_770;
wire   [61:0] inputWidth_cast10_cast_fu_251_p1;
reg   [61:0] inputWidth_cast10_cast_reg_775;
wire   [61:0] tmp3_cast_mid144_cast_fu_255_p1;
reg   [61:0] tmp3_cast_mid144_cast_reg_780;
wire   [61:0] convWidth_cast_cast_fu_259_p1;
reg   [61:0] convWidth_cast_cast_reg_785;
wire   [32:0] zext_ln34_cast_fu_263_p1;
reg   [32:0] zext_ln34_cast_reg_791;
wire   [61:0] inputHeight_cast9_cast_fu_267_p1;
reg   [61:0] inputHeight_cast9_cast_reg_797;
reg   [31:0] cy_V_1_reg_803;
reg    ap_block_pp0_stage1_11001;
reg   [95:0] indvar_flatten68_load_reg_808;
wire   [61:0] zext_ln1027_fu_310_p1;
wire   [61:0] zext_ln1027_1_fu_319_p1;
reg   [0:0] icmp_ln1027_1_reg_823;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_1_reg_823_pp0_iter9_reg;
reg   [31:0] op2_load_reg_827;
reg   [63:0] indvar_flatten_load_reg_832;
wire   [0:0] icmp_ln1027_2_fu_339_p2;
reg   [0:0] icmp_ln1027_2_reg_837;
reg   [0:0] icmp_ln1027_2_reg_837_pp0_iter1_reg;
wire   [31:0] select_ln1027_fu_344_p3;
reg   [31:0] select_ln1027_reg_846;
wire   [31:0] add_ln840_fu_352_p2;
reg   [31:0] add_ln840_reg_851;
wire  signed [61:0] add_ln1027_1_fu_370_p2;
reg  signed [61:0] add_ln1027_1_reg_856;
wire   [0:0] select_ln1027_5_fu_380_p3;
reg   [0:0] select_ln1027_5_reg_861;
reg   [0:0] select_ln1027_5_reg_861_pp0_iter1_reg;
wire   [31:0] add_ln840_1_fu_387_p2;
reg   [31:0] add_ln840_1_reg_869;
reg   [61:0] empty_reg_876;
reg   [61:0] empty_36_reg_882;
wire   [31:0] select_ln1027_6_fu_419_p3;
reg   [31:0] select_ln1027_6_reg_892;
reg   [31:0] select_ln1027_6_reg_892_pp0_iter2_reg;
reg   [31:0] select_ln1027_6_reg_892_pp0_iter3_reg;
reg   [31:0] select_ln1027_6_reg_892_pp0_iter4_reg;
reg   [31:0] select_ln1027_6_reg_892_pp0_iter5_reg;
wire   [32:0] tmp3_fu_480_p2;
reg   [32:0] tmp3_reg_903;
wire   [61:0] grp_fu_410_p2;
reg   [61:0] p_mid136_reg_908;
wire   [32:0] tmp3_mid1_fu_488_p2;
reg   [32:0] tmp3_mid1_reg_914;
wire   [61:0] grp_fu_429_p2;
reg   [61:0] p_mid115_reg_919;
wire  signed [61:0] select_ln1027_8_fu_538_p3;
reg  signed [61:0] select_ln1027_8_reg_924;
wire   [61:0] tmp10_fu_548_p2;
reg   [61:0] tmp10_reg_929;
reg   [61:0] tmp10_reg_929_pp0_iter3_reg;
wire   [61:0] grp_fu_406_p2;
reg   [61:0] mul_ln1027_reg_934;
reg   [63:0] gmem_addr_reg_939;
wire   [61:0] grp_fu_554_p2;
reg   [61:0] mul_ln1027_2_reg_945;
reg   [61:0] sext_ln39_mid2_v_reg_950;
reg   [63:0] gmem_addr_1_reg_955;
reg  signed [31:0] filterValue_reg_961;
reg  signed [31:0] filterValue_reg_961_pp0_iter8_reg;
reg  signed [31:0] filterValue_reg_961_pp0_iter9_reg;
reg  signed [31:0] pixelValue_reg_966;
reg   [31:0] trunc_ln1_reg_981;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [63:0] add_ln42_fu_587_p2;
wire  signed [63:0] sext_ln43_fu_638_p1;
reg   [31:0] acc_fu_108;
wire   [31:0] acc_1_fu_673_p2;
wire    ap_loop_init;
reg   [31:0] op2_fu_112;
wire   [31:0] add_ln840_2_fu_439_p2;
reg   [31:0] cy_V_fu_116;
wire   [31:0] select_ln1027_9_fu_434_p3;
reg   [63:0] indvar_flatten_fu_120;
wire   [63:0] select_ln1027_10_fu_450_p3;
reg   [31:0] iChannel_V_fu_124;
wire   [31:0] select_ln1027_1_fu_358_p3;
reg   [95:0] indvar_flatten68_fu_128;
wire   [95:0] add_ln1027_fu_398_p2;
reg    ap_block_pp0_stage1_01001;
wire   [61:0] zext_ln1027_3_fu_366_p1;
wire   [0:0] icmp_ln1027_3_fu_375_p2;
wire   [31:0] grp_fu_410_p0;
wire   [31:0] grp_fu_410_p1;
wire   [0:0] or_ln1027_fu_415_p2;
wire   [31:0] grp_fu_429_p0;
wire   [31:0] grp_fu_429_p1;
wire   [63:0] add_ln1027_5_fu_445_p2;
wire   [32:0] cy_V_cast_fu_477_p1;
wire   [32:0] cy_V_cast_mid1_fu_485_p1;
wire   [61:0] tmp3_cast_fu_493_p1;
wire   [61:0] p_mid146_fu_506_p2;
wire   [61:0] empty_35_fu_496_p2;
wire   [61:0] tmp3_cast_mid1_fu_523_p1;
wire   [61:0] select_ln1027_2_fu_501_p3;
wire   [61:0] select_ln1027_3_fu_510_p3;
wire   [61:0] p_mid1_fu_526_p2;
wire   [61:0] select_ln1027_4_fu_516_p3;
wire   [61:0] cx_V_cast_fu_545_p1;
wire   [61:0] select_ln1027_7_fu_532_p3;
wire   [31:0] grp_fu_554_p1;
wire   [63:0] sext_ln38_mid2_v_v_v_v_fu_558_p3;
wire   [63:0] add_ln1027_2_fu_565_p2;
wire   [61:0] sext_ln38_mid2_v_fu_570_p4;
wire   [63:0] zext_ln42_fu_584_p1;
wire  signed [63:0] sext_ln1027_fu_580_p1;
wire   [61:0] add_ln1027_3_fu_599_p2;
wire   [63:0] sext_ln39_mid2_v_v_v_v_fu_603_p3;
wire   [63:0] add_ln1027_4_fu_611_p2;
wire   [62:0] cx_V_cast8_fu_629_p1;
wire  signed [62:0] sext_ln1027_1_fu_626_p1;
wire   [62:0] add_ln43_fu_632_p2;
wire   [51:0] grp_fu_654_p2;
reg    grp_fu_314_ce;
reg    grp_fu_323_ce;
reg    grp_fu_406_ce;
reg    grp_fu_410_ce;
reg    grp_fu_429_ce;
reg    grp_fu_554_ce;
reg    grp_fu_654_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to11;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [61:0] grp_fu_410_p00;
wire   [61:0] grp_fu_429_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Conv2D_HW_mul_62s_62s_62_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 62 ),
    .din1_WIDTH( 62 ),
    .dout_WIDTH( 62 ))
mul_62s_62s_62_5_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp1),
    .din1(add_ln1027_1_reg_856),
    .ce(grp_fu_406_ce),
    .dout(grp_fu_406_p2)
);

Conv2D_HW_mul_32ns_32ns_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_32ns_32ns_62_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_410_p0),
    .din1(grp_fu_410_p1),
    .ce(grp_fu_410_ce),
    .dout(grp_fu_410_p2)
);

Conv2D_HW_mul_32ns_32ns_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_32ns_32ns_62_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_429_p0),
    .din1(grp_fu_429_p1),
    .ce(grp_fu_429_ce),
    .dout(grp_fu_429_p2)
);

Conv2D_HW_mul_62s_32ns_62_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 62 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_62s_32ns_62_5_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln1027_8_reg_924),
    .din1(grp_fu_554_p1),
    .ce(grp_fu_554_ce),
    .dout(grp_fu_554_p2)
);

Conv2D_HW_mul_32s_32s_52_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 52 ))
mul_32s_32s_52_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pixelValue_reg_966),
    .din1(filterValue_reg_961_pp0_iter9_reg),
    .ce(grp_fu_654_ce),
    .dout(grp_fu_654_p2)
);

Conv2D_HW_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_fu_108 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_fu_108 <= acc_1_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            cy_V_fu_116 <= 32'd0;
        end else if (((icmp_ln1027_1_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            cy_V_fu_116 <= select_ln1027_9_fu_434_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iChannel_V_fu_124 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_1_fu_328_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        iChannel_V_fu_124 <= select_ln1027_1_fu_358_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten68_fu_128 <= 96'd0;
        end else if (((icmp_ln1027_1_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten68_fu_128 <= add_ln1027_fu_398_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 64'd0;
        end else if (((icmp_ln1027_1_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_120 <= select_ln1027_10_fu_450_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            op2_fu_112 <= 32'd0;
        end else if (((icmp_ln1027_1_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            op2_fu_112 <= add_ln840_2_fu_439_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_1_fu_328_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln1027_1_reg_856 <= add_ln1027_1_fu_370_p2;
        add_ln840_1_reg_869 <= add_ln840_1_fu_387_p2;
        add_ln840_reg_851 <= add_ln840_fu_352_p2;
        icmp_ln1027_2_reg_837 <= icmp_ln1027_2_fu_339_p2;
        indvar_flatten_load_reg_832 <= indvar_flatten_fu_120;
        op2_load_reg_827 <= op2_fu_112;
        select_ln1027_5_reg_861 <= select_ln1027_5_fu_380_p3;
        select_ln1027_reg_846 <= select_ln1027_fu_344_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        cy_V_1_reg_803 <= cy_V_fu_116;
        filterValue_reg_961 <= m_axi_gmem_RDATA;
        filterValue_reg_961_pp0_iter8_reg <= filterValue_reg_961;
        filterValue_reg_961_pp0_iter9_reg <= filterValue_reg_961_pp0_iter8_reg;
        gmem_addr_1_reg_955 <= sext_ln43_fu_638_p1;
        gmem_addr_reg_939 <= add_ln42_fu_587_p2;
        icmp_ln1027_1_reg_823 <= icmp_ln1027_1_fu_328_p2;
        icmp_ln1027_1_reg_823_pp0_iter1_reg <= icmp_ln1027_1_reg_823;
        icmp_ln1027_1_reg_823_pp0_iter2_reg <= icmp_ln1027_1_reg_823_pp0_iter1_reg;
        icmp_ln1027_1_reg_823_pp0_iter3_reg <= icmp_ln1027_1_reg_823_pp0_iter2_reg;
        icmp_ln1027_1_reg_823_pp0_iter4_reg <= icmp_ln1027_1_reg_823_pp0_iter3_reg;
        icmp_ln1027_1_reg_823_pp0_iter5_reg <= icmp_ln1027_1_reg_823_pp0_iter4_reg;
        icmp_ln1027_1_reg_823_pp0_iter6_reg <= icmp_ln1027_1_reg_823_pp0_iter5_reg;
        icmp_ln1027_1_reg_823_pp0_iter7_reg <= icmp_ln1027_1_reg_823_pp0_iter6_reg;
        icmp_ln1027_1_reg_823_pp0_iter8_reg <= icmp_ln1027_1_reg_823_pp0_iter7_reg;
        icmp_ln1027_1_reg_823_pp0_iter9_reg <= icmp_ln1027_1_reg_823_pp0_iter8_reg;
        icmp_ln1027_2_reg_837_pp0_iter1_reg <= icmp_ln1027_2_reg_837;
        indvar_flatten68_load_reg_808 <= indvar_flatten68_fu_128;
        mul_ln1027_2_reg_945 <= grp_fu_554_p2;
        select_ln1027_5_reg_861_pp0_iter1_reg <= select_ln1027_5_reg_861;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        convWidth_cast_cast_reg_785[31 : 0] <= convWidth_cast_cast_fu_259_p1[31 : 0];
        empty_36_reg_882 <= grp_fu_443_p_dout0;
        empty_reg_876 <= grp_fu_291_p_dout0;
        inputHeight_cast9_cast_reg_797[31 : 0] <= inputHeight_cast9_cast_fu_267_p1[31 : 0];
        inputWidth_cast10_cast_reg_775[31 : 0] <= inputWidth_cast10_cast_fu_251_p1[31 : 0];
        mul_ln1027_reg_934 <= grp_fu_406_p2;
        pixelValue_reg_966 <= m_axi_gmem_RDATA;
        select_ln1027_6_reg_892_pp0_iter2_reg <= select_ln1027_6_reg_892;
        select_ln1027_6_reg_892_pp0_iter3_reg <= select_ln1027_6_reg_892_pp0_iter2_reg;
        select_ln1027_6_reg_892_pp0_iter4_reg <= select_ln1027_6_reg_892_pp0_iter3_reg;
        select_ln1027_6_reg_892_pp0_iter5_reg <= select_ln1027_6_reg_892_pp0_iter4_reg;
        sext_ln39_mid2_v_reg_950 <= {{add_ln1027_4_fu_611_p2[63:2]}};
        tmp10_reg_929_pp0_iter3_reg <= tmp10_reg_929;
        tmp3_cast_mid144_cast_reg_780[31 : 0] <= tmp3_cast_mid144_cast_fu_255_p1[31 : 0];
        trunc_ln1_reg_981 <= {{grp_fu_654_p2[51:20]}};
        x_V_cast13_cast_reg_770[31 : 0] <= x_V_cast13_cast_fu_247_p1[31 : 0];
        zext_ln34_cast_reg_791[31 : 0] <= zext_ln34_cast_fu_263_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1027_5_reg_861 == 1'd1) & (icmp_ln1027_1_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_mid115_reg_919 <= grp_fu_429_p2;
        tmp3_mid1_reg_914 <= tmp3_mid1_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_mid136_reg_908 <= grp_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1027_6_reg_892 <= select_ln1027_6_fu_419_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_reg_823_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1027_8_reg_924 <= select_ln1027_8_fu_538_p3;
        tmp10_reg_929 <= tmp10_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1027_5_reg_861 == 1'd0) & (icmp_ln1027_2_reg_837 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp3_reg_903 <= tmp3_fu_480_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1027_1_reg_823_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_out_ap_vld = 1'b1;
    end else begin
        acc_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_1_fu_328_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_1_reg_823_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_314_ce = 1'b1;
    end else begin
        grp_fu_314_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_323_ce = 1'b1;
    end else begin
        grp_fu_323_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_406_ce = 1'b1;
    end else begin
        grp_fu_406_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_410_ce = 1'b1;
    end else begin
        grp_fu_410_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_429_ce = 1'b1;
    end else begin
        grp_fu_429_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_554_ce = 1'b1;
    end else begin
        grp_fu_554_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_654_ce = 1'b1;
    end else begin
        grp_fu_654_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_1_reg_955;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_reg_939;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_1_fu_673_p2 = (trunc_ln1_reg_981 + acc_fu_108);

assign acc_out = acc_fu_108;

assign add_ln1027_1_fu_370_p2 = (zext_ln1027_3_fu_366_p1 + mul_ln1027_1);

assign add_ln1027_2_fu_565_p2 = (sext_ln38_mid2_v_v_v_v_fu_558_p3 + filters);

assign add_ln1027_3_fu_599_p2 = (mul_ln1027_2_reg_945 + x_V_cast13_cast_reg_770);

assign add_ln1027_4_fu_611_p2 = (sext_ln39_mid2_v_v_v_v_fu_603_p3 + input_r);

assign add_ln1027_5_fu_445_p2 = (indvar_flatten_load_reg_832 + 64'd1);

assign add_ln1027_fu_398_p2 = (indvar_flatten68_load_reg_808 + 96'd1);

assign add_ln42_fu_587_p2 = ($signed(zext_ln42_fu_584_p1) + $signed(sext_ln1027_fu_580_p1));

assign add_ln43_fu_632_p2 = ($signed(cx_V_cast8_fu_629_p1) + $signed(sext_ln1027_1_fu_626_p1));

assign add_ln840_1_fu_387_p2 = (select_ln1027_fu_344_p3 + 32'd1);

assign add_ln840_2_fu_439_p2 = (select_ln1027_6_fu_419_p3 + 32'd1);

assign add_ln840_fu_352_p2 = (iChannel_V_fu_124 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((m_axi_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter10 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((m_axi_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter7 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter7 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((m_axi_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter7 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((m_axi_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)));
end

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage1_iter7 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage0_iter10 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign convWidth_cast_cast_fu_259_p1 = convWidth_cast;

assign cx_V_cast8_fu_629_p1 = select_ln1027_6_reg_892_pp0_iter5_reg;

assign cx_V_cast_fu_545_p1 = select_ln1027_6_reg_892;

assign cy_V_cast_fu_477_p1 = cy_V_1_reg_803;

assign cy_V_cast_mid1_fu_485_p1 = add_ln840_1_reg_869;

assign empty_35_fu_496_p2 = (tmp3_cast_fu_493_p1 + empty_reg_876);

assign grp_fu_291_p_ce = grp_fu_314_ce;

assign grp_fu_291_p_din0 = zext_ln1027_fu_310_p1;

assign grp_fu_291_p_din1 = inputHeight_cast9_cast_reg_797;

assign grp_fu_410_p0 = grp_fu_410_p00;

assign grp_fu_410_p00 = add_ln840_reg_851;

assign grp_fu_410_p1 = inputHeight_cast9_cast_reg_797;

assign grp_fu_429_p0 = grp_fu_429_p00;

assign grp_fu_429_p00 = add_ln840_1_reg_869;

assign grp_fu_429_p1 = convWidth_cast_cast_reg_785;

assign grp_fu_443_p_ce = grp_fu_323_ce;

assign grp_fu_443_p_din0 = zext_ln1027_1_fu_319_p1;

assign grp_fu_443_p_din1 = convWidth_cast_cast_reg_785;

assign grp_fu_554_p1 = inputWidth_cast10_cast_reg_775;

assign icmp_ln1027_1_fu_328_p2 = ((indvar_flatten68_fu_128 == mul_ln15_1) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_339_p2 = ((indvar_flatten_fu_120 == mul_ln15) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_375_p2 = ((op2_fu_112 == convWidth) ? 1'b1 : 1'b0);

assign inputHeight_cast9_cast_fu_267_p1 = inputHeight_cast9;

assign inputWidth_cast10_cast_fu_251_p1 = inputWidth_cast10;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln1027_fu_415_p2 = (select_ln1027_5_reg_861 | icmp_ln1027_2_reg_837);

assign p_mid146_fu_506_p2 = (tmp3_cast_mid144_cast_reg_780 + p_mid136_reg_908);

assign p_mid1_fu_526_p2 = (tmp3_cast_mid1_fu_523_p1 + select_ln1027_2_fu_501_p3);

assign select_ln1027_10_fu_450_p3 = ((icmp_ln1027_2_reg_837[0:0] == 1'b1) ? 64'd1 : add_ln1027_5_fu_445_p2);

assign select_ln1027_1_fu_358_p3 = ((icmp_ln1027_2_fu_339_p2[0:0] == 1'b1) ? add_ln840_fu_352_p2 : iChannel_V_fu_124);

assign select_ln1027_2_fu_501_p3 = ((icmp_ln1027_2_reg_837_pp0_iter1_reg[0:0] == 1'b1) ? p_mid136_reg_908 : empty_reg_876);

assign select_ln1027_3_fu_510_p3 = ((icmp_ln1027_2_reg_837_pp0_iter1_reg[0:0] == 1'b1) ? 62'd0 : empty_36_reg_882);

assign select_ln1027_4_fu_516_p3 = ((icmp_ln1027_2_reg_837_pp0_iter1_reg[0:0] == 1'b1) ? p_mid146_fu_506_p2 : empty_35_fu_496_p2);

assign select_ln1027_5_fu_380_p3 = ((icmp_ln1027_2_fu_339_p2[0:0] == 1'b1) ? icmp_ln1027 : icmp_ln1027_3_fu_375_p2);

assign select_ln1027_6_fu_419_p3 = ((or_ln1027_fu_415_p2[0:0] == 1'b1) ? 32'd0 : op2_load_reg_827);

assign select_ln1027_7_fu_532_p3 = ((select_ln1027_5_reg_861_pp0_iter1_reg[0:0] == 1'b1) ? p_mid115_reg_919 : select_ln1027_3_fu_510_p3);

assign select_ln1027_8_fu_538_p3 = ((select_ln1027_5_reg_861_pp0_iter1_reg[0:0] == 1'b1) ? p_mid1_fu_526_p2 : select_ln1027_4_fu_516_p3);

assign select_ln1027_9_fu_434_p3 = ((select_ln1027_5_reg_861[0:0] == 1'b1) ? add_ln840_1_reg_869 : select_ln1027_reg_846);

assign select_ln1027_fu_344_p3 = ((icmp_ln1027_2_fu_339_p2[0:0] == 1'b1) ? 32'd0 : cy_V_fu_116);

assign sext_ln1027_1_fu_626_p1 = $signed(sext_ln39_mid2_v_reg_950);

assign sext_ln1027_fu_580_p1 = $signed(sext_ln38_mid2_v_fu_570_p4);

assign sext_ln38_mid2_v_fu_570_p4 = {{add_ln1027_2_fu_565_p2[63:2]}};

assign sext_ln38_mid2_v_v_v_v_fu_558_p3 = {{mul_ln1027_reg_934}, {2'd0}};

assign sext_ln39_mid2_v_v_v_v_fu_603_p3 = {{add_ln1027_3_fu_599_p2}, {2'd0}};

assign sext_ln43_fu_638_p1 = $signed(add_ln43_fu_632_p2);

assign tmp10_fu_548_p2 = (cx_V_cast_fu_545_p1 + select_ln1027_7_fu_532_p3);

assign tmp3_cast_fu_493_p1 = tmp3_reg_903;

assign tmp3_cast_mid144_cast_fu_255_p1 = tmp3_cast_mid144;

assign tmp3_cast_mid1_fu_523_p1 = tmp3_mid1_reg_914;

assign tmp3_fu_480_p2 = (cy_V_cast_fu_477_p1 + zext_ln34_cast_reg_791);

assign tmp3_mid1_fu_488_p2 = (cy_V_cast_mid1_fu_485_p1 + zext_ln34_cast_reg_791);

assign x_V_cast13_cast_fu_247_p1 = x_V_cast13;

assign zext_ln1027_1_fu_319_p1 = cy_V_fu_116;

assign zext_ln1027_3_fu_366_p1 = select_ln1027_1_fu_358_p3;

assign zext_ln1027_fu_310_p1 = iChannel_V_fu_124;

assign zext_ln34_cast_fu_263_p1 = zext_ln34;

assign zext_ln42_fu_584_p1 = tmp10_reg_929_pp0_iter3_reg;

always @ (posedge ap_clk) begin
    x_V_cast13_cast_reg_770[61:32] <= 30'b000000000000000000000000000000;
    inputWidth_cast10_cast_reg_775[61:32] <= 30'b000000000000000000000000000000;
    tmp3_cast_mid144_cast_reg_780[61:32] <= 30'b000000000000000000000000000000;
    convWidth_cast_cast_reg_785[61:32] <= 30'b000000000000000000000000000000;
    zext_ln34_cast_reg_791[32] <= 1'b0;
    inputHeight_cast9_cast_reg_797[61:32] <= 30'b000000000000000000000000000000;
end

endmodule //Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_37_4_VITIS_LOOP_38_5_VITIS_LOOP_39_6
