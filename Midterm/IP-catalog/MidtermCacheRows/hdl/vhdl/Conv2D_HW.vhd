-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv2D_HW is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of Conv2D_HW is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Conv2D_HW_Conv2D_HW,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=264,HLS_SYN_DSP=0,HLS_SYN_FF=9549,HLS_SYN_LUT=8731,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv62_0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv33_1FFFFFFFE : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111111110";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv35_7FFFFFFF8 : STD_LOGIC_VECTOR (34 downto 0) := "11111111111111111111111111111111000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_r : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r : STD_LOGIC_VECTOR (63 downto 0);
    signal coeffs : STD_LOGIC_VECTOR (63 downto 0);
    signal biases : STD_LOGIC_VECTOR (63 downto 0);
    signal numChannels : STD_LOGIC_VECTOR (31 downto 0);
    signal numFilters : STD_LOGIC_VECTOR (31 downto 0);
    signal inputWidth : STD_LOGIC_VECTOR (31 downto 0);
    signal inputHeight : STD_LOGIC_VECTOR (31 downto 0);
    signal convWidth : STD_LOGIC_VECTOR (31 downto 0);
    signal convHeight : STD_LOGIC_VECTOR (31 downto 0);
    signal apply_relu : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal apply_relu_read_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal convHeight_read_reg_718 : STD_LOGIC_VECTOR (31 downto 0);
    signal convWidth_read_reg_726 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputHeight_read_reg_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputWidth_read_reg_742 : STD_LOGIC_VECTOR (31 downto 0);
    signal numFilters_read_reg_753 : STD_LOGIC_VECTOR (31 downto 0);
    signal numChannels_read_reg_758 : STD_LOGIC_VECTOR (31 downto 0);
    signal biases_read_reg_765 : STD_LOGIC_VECTOR (63 downto 0);
    signal coeffs_read_reg_770 : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r_read_reg_775 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_r_read_reg_780 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_344_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln17_reg_811 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_356_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln17_2_reg_818 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal numChannels_cast_fu_386_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal convHeight_cast_fu_389_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal convWidth_cast_fu_392_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal convWidth_cast_reg_855 : STD_LOGIC_VECTOR (61 downto 0);
    signal cmp_i5741286_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i5741286_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_400_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln38_reg_866 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_406_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln39_reg_872 : STD_LOGIC_VECTOR (61 downto 0);
    signal sub_i_i399_fu_415_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i_i399_reg_877 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal sub_i_i228_fu_424_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i_i228_reg_882 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln43_fu_441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln43_reg_887 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_456_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln73_1_fu_480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln73_1_reg_897 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_57_fu_489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_57_reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal mul_ln17_1_reg_907 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_380_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal mul_ln17_3_reg_913 : STD_LOGIC_VECTOR (95 downto 0);
    signal icmp_ln1027_1_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_3_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_3_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1027_fu_516_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1027_reg_935 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln1027_4_fu_521_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1027_4_reg_940 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln840_fu_531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln840_reg_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_reg_953 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1027_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_537_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln39_1_reg_959 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal y_V_1_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_V_1_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_fu_598_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_972 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1027_2_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_615_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln58_reg_977 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal gmem_addr_2_reg_982 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal gmem_addr_read_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_V_2_fu_652_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_V_2_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal trunc_ln77_fu_658_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln77_reg_1001 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1027_6_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_2_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal coeff_cache_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal coeff_cache_ce0 : STD_LOGIC;
    signal coeff_cache_we0 : STD_LOGIC;
    signal coeff_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_buffer_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal row_buffer_ce0 : STD_LOGIC;
    signal row_buffer_we0 : STD_LOGIC;
    signal row_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_idle : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_ready : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_ce0 : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_we0 : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_idle : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_ready : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_ce0 : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_we0 : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_ce : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_ce : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_done : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_idle : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_ready : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_ce0 : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_ce0 : STD_LOGIC;
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_acc_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_acc_2_out_ap_vld : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal y_V_reg_257 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal x_V_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_NS_fsm_state14 : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal p_cast_cast_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln73_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul147_fu_140 : STD_LOGIC_VECTOR (61 downto 0);
    signal phi_mul_fu_144 : STD_LOGIC_VECTOR (63 downto 0);
    signal iFilter_V_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_344_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_356_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_380_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_400_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputHeight_cast_fu_412_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal inputWidth_cast_fu_421_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal cmp_i5691284_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln43_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln43_fu_448_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_463_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln58_1_fu_470_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln58_fu_474_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal cmp_i2051307_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln73_fu_484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1027_fu_516_p0 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_1_fu_542_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_cast11_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_58_fu_554_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_559_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1027_fu_579_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln58_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_615_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln58_1_fu_619_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_623_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1027_1_fu_643_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal acc_fu_666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_671_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_400_ce : STD_LOGIC;
    signal grp_fu_406_ce : STD_LOGIC;
    signal grp_fu_615_ce : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal grp_fu_344_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_344_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_356_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_356_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_368_p00 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_368_p10 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_380_p00 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_380_p10 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_44_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        convWidth : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln17_1 : IN STD_LOGIC_VECTOR (95 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln17 : IN STD_LOGIC_VECTOR (63 downto 0);
        mul_ln38 : IN STD_LOGIC_VECTOR (61 downto 0);
        mul_ln39_3 : IN STD_LOGIC_VECTOR (61 downto 0);
        coeffs : IN STD_LOGIC_VECTOR (63 downto 0);
        icmp_ln1027_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        coeff_cache_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        coeff_cache_ce0 : OUT STD_LOGIC;
        coeff_cache_we0 : OUT STD_LOGIC;
        coeff_cache_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_66_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        y_V : IN STD_LOGIC_VECTOR (31 downto 0);
        inputHeight_cast7 : IN STD_LOGIC_VECTOR (31 downto 0);
        inputWidth : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln17_3 : IN STD_LOGIC_VECTOR (95 downto 0);
        mul_ln17_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        icmp_ln1027_3 : IN STD_LOGIC_VECTOR (0 downto 0);
        inputWidth_cast8 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r : IN STD_LOGIC_VECTOR (63 downto 0);
        row_buffer_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        row_buffer_ce0 : OUT STD_LOGIC;
        row_buffer_we0 : OUT STD_LOGIC;
        row_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_400_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_400_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_400_p_dout0 : IN STD_LOGIC_VECTOR (61 downto 0);
        grp_fu_400_p_ce : OUT STD_LOGIC;
        grp_fu_406_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_406_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_406_p_dout0 : IN STD_LOGIC_VECTOR (61 downto 0);
        grp_fu_406_p_ce : OUT STD_LOGIC );
    end component;


    component Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln17_1 : IN STD_LOGIC_VECTOR (95 downto 0);
        mul_ln17 : IN STD_LOGIC_VECTOR (63 downto 0);
        convWidth : IN STD_LOGIC_VECTOR (31 downto 0);
        icmp_ln1027_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        coeff_cache_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        coeff_cache_ce0 : OUT STD_LOGIC;
        coeff_cache_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln2 : IN STD_LOGIC_VECTOR (16 downto 0);
        row_buffer_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        row_buffer_ce0 : OUT STD_LOGIC;
        row_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        acc_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        acc_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Conv2D_HW_mul_32ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Conv2D_HW_mul_32ns_64ns_96_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (95 downto 0) );
    end component;


    component Conv2D_HW_mul_32ns_32ns_62_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component Conv2D_HW_mul_62s_62s_62_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (61 downto 0);
        din1 : IN STD_LOGIC_VECTOR (61 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component Conv2D_HW_mul_64s_35s_64_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (34 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Conv2D_HW_coeff_cache_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv2D_HW_row_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Conv2D_HW_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        coeffs : OUT STD_LOGIC_VECTOR (63 downto 0);
        biases : OUT STD_LOGIC_VECTOR (63 downto 0);
        numChannels : OUT STD_LOGIC_VECTOR (31 downto 0);
        numFilters : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputWidth : OUT STD_LOGIC_VECTOR (31 downto 0);
        inputHeight : OUT STD_LOGIC_VECTOR (31 downto 0);
        convWidth : OUT STD_LOGIC_VECTOR (31 downto 0);
        convHeight : OUT STD_LOGIC_VECTOR (31 downto 0);
        apply_relu : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component Conv2D_HW_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    coeff_cache_U : component Conv2D_HW_coeff_cache_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => coeff_cache_address0,
        ce0 => coeff_cache_ce0,
        we0 => coeff_cache_we0,
        d0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_d0,
        q0 => coeff_cache_q0);

    row_buffer_U : component Conv2D_HW_row_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 98304,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => row_buffer_address0,
        ce0 => row_buffer_ce0,
        we0 => row_buffer_we0,
        d0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_d0,
        q0 => row_buffer_q0);

    grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280 : component Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_44_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start,
        ap_done => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done,
        ap_idle => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_idle,
        ap_ready => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_ready,
        m_axi_gmem_AWVALID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        convWidth => convWidth_read_reg_726,
        mul_ln17_1 => mul_ln17_1_reg_907,
        empty => empty_reg_892,
        mul_ln17 => mul_ln17_reg_811,
        mul_ln38 => mul_ln38_reg_866,
        mul_ln39_3 => mul_ln39_1_reg_959,
        coeffs => coeffs_read_reg_770,
        icmp_ln1027_1 => icmp_ln1027_1_reg_918,
        coeff_cache_address0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_address0,
        coeff_cache_ce0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_ce0,
        coeff_cache_we0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_we0,
        coeff_cache_d0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_d0);

    grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295 : component Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_66_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start,
        ap_done => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done,
        ap_idle => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_idle,
        ap_ready => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_ready,
        m_axi_gmem_AWVALID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        y_V => y_V_reg_257,
        inputHeight_cast7 => inputHeight_read_reg_736,
        inputWidth => inputWidth_read_reg_742,
        mul_ln17_3 => mul_ln17_3_reg_913,
        mul_ln17_2 => mul_ln17_2_reg_818,
        icmp_ln1027_3 => icmp_ln1027_3_reg_924,
        inputWidth_cast8 => inputWidth_read_reg_742,
        input_r => input_r_read_reg_780,
        row_buffer_address0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_address0,
        row_buffer_ce0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_ce0,
        row_buffer_we0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_we0,
        row_buffer_d0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_d0,
        grp_fu_400_p_din0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din0,
        grp_fu_400_p_din1 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din1,
        grp_fu_400_p_dout0 => grp_fu_400_p2,
        grp_fu_400_p_ce => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_ce,
        grp_fu_406_p_din0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din0,
        grp_fu_406_p_din1 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din1,
        grp_fu_406_p_dout0 => grp_fu_406_p2,
        grp_fu_406_p_ce => grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_ce);

    grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311 : component Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start,
        ap_done => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_done,
        ap_idle => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_idle,
        ap_ready => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_ready,
        mul_ln17_1 => mul_ln17_1_reg_907,
        mul_ln17 => mul_ln17_reg_811,
        convWidth => convWidth_read_reg_726,
        icmp_ln1027_1 => icmp_ln1027_1_reg_918,
        coeff_cache_address0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_address0,
        coeff_cache_ce0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_ce0,
        coeff_cache_q0 => coeff_cache_q0,
        trunc_ln2 => trunc_ln77_reg_1001,
        row_buffer_address0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_address0,
        row_buffer_ce0 => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_ce0,
        row_buffer_q0 => row_buffer_q0,
        acc_2_out => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_acc_2_out,
        acc_2_out_ap_vld => grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_acc_2_out_ap_vld);

    control_s_axi_U : component Conv2D_HW_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_r => input_r,
        output_r => output_r,
        coeffs => coeffs,
        biases => biases,
        numChannels => numChannels,
        numFilters => numFilters,
        inputWidth => inputWidth,
        inputHeight => inputHeight,
        convWidth => convWidth,
        convHeight => convHeight,
        apply_relu => apply_relu,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component Conv2D_HW_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_addr_2_reg_982,
        I_AWLEN => empty_57_reg_902,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => acc_2_reg_1006,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    mul_32ns_32ns_64_2_1_U37 : component Conv2D_HW_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_344_p0,
        din1 => grp_fu_344_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_344_p2);

    mul_32ns_32ns_64_2_1_U38 : component Conv2D_HW_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_356_p0,
        din1 => grp_fu_356_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_356_p2);

    mul_32ns_64ns_96_5_1_U39 : component Conv2D_HW_mul_32ns_64ns_96_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 96)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_368_p0,
        din1 => grp_fu_368_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_368_p2);

    mul_32ns_64ns_96_5_1_U40 : component Conv2D_HW_mul_32ns_64ns_96_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 96)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_380_p0,
        din1 => grp_fu_380_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_380_p2);

    mul_32ns_32ns_62_2_1_U41 : component Conv2D_HW_mul_32ns_32ns_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_400_p0,
        din1 => grp_fu_400_p1,
        ce => grp_fu_400_ce,
        dout => grp_fu_400_p2);

    mul_32ns_32ns_62_2_1_U42 : component Conv2D_HW_mul_32ns_32ns_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_406_p0,
        din1 => grp_fu_406_p1,
        ce => grp_fu_406_ce,
        dout => grp_fu_406_p2);

    mul_62s_62s_62_5_1_U43 : component Conv2D_HW_mul_62s_62s_62_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 62,
        din1_WIDTH => 62,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mul_ln39_reg_872,
        din1 => phi_mul147_fu_140,
        ce => ap_const_logic_1,
        dout => grp_fu_537_p2);

    mul_64s_35s_64_5_1_U44 : component Conv2D_HW_mul_64s_35s_64_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 35,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_reg_972,
        din1 => grp_fu_615_p1,
        ce => grp_fu_615_ce,
        dout => grp_fu_615_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state14) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_ready = ap_const_logic_1)) then 
                    grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_ready = ap_const_logic_1)) then 
                    grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1027_6_fu_647_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_ready = ap_const_logic_1)) then 
                    grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    iFilter_V_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                iFilter_V_fu_148 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                iFilter_V_fu_148 <= add_ln840_reg_948;
            end if; 
        end if;
    end process;

    phi_mul147_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul147_fu_140 <= ap_const_lv62_0;
            elsif (((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                phi_mul147_fu_140 <= add_ln1027_reg_935;
            end if; 
        end if;
    end process;

    phi_mul_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_fu_144 <= ap_const_lv64_0;
            elsif (((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                phi_mul_fu_144 <= add_ln1027_4_reg_940;
            end if; 
        end if;
    end process;

    x_V_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                x_V_reg_269 <= x_V_2_reg_996;
            elsif (((gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                x_V_reg_269 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_V_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                y_V_reg_257 <= ap_const_lv32_0;
            elsif (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                y_V_reg_257 <= y_V_1_reg_967;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                acc_2_reg_1006 <= acc_2_fu_684_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln1027_4_reg_940 <= add_ln1027_4_fu_521_p2;
                add_ln1027_reg_935 <= add_ln1027_fu_516_p2;
                add_ln840_reg_948 <= add_ln840_fu_531_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                apply_relu_read_reg_713 <= apply_relu;
                biases_read_reg_765 <= biases;
                coeffs_read_reg_770 <= coeffs;
                convHeight_read_reg_718 <= convHeight;
                convWidth_read_reg_726 <= convWidth;
                inputHeight_read_reg_736 <= inputHeight;
                inputWidth_read_reg_742 <= inputWidth;
                input_r_read_reg_780 <= input_r;
                numChannels_read_reg_758 <= numChannels;
                numFilters_read_reg_753 <= numFilters;
                output_r_read_reg_775 <= output_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                cmp_i5741286_reg_861 <= cmp_i5741286_fu_395_p2;
                    convWidth_cast_reg_855(31 downto 0) <= convWidth_cast_fu_392_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                empty_57_reg_902 <= empty_57_fu_489_p3;
                empty_reg_892 <= empty_fu_456_p3;
                icmp_ln1027_1_reg_918 <= icmp_ln1027_1_fu_497_p2;
                icmp_ln1027_3_reg_924 <= icmp_ln1027_3_fu_502_p2;
                mul_ln17_1_reg_907 <= grp_fu_368_p2;
                mul_ln17_3_reg_913 <= grp_fu_380_p2;
                sext_ln43_reg_887 <= sext_ln43_fu_441_p1;
                    sext_ln73_1_reg_897(63 downto 2) <= sext_ln73_1_fu_480_p1(63 downto 2);
                sub_i_i228_reg_882 <= sub_i_i228_fu_424_p2;
                sub_i_i399_reg_877 <= sub_i_i399_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                gmem_addr_2_reg_982 <= sext_ln73_fu_633_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                gmem_addr_read_reg_988 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                gmem_addr_reg_953 <= p_cast_cast_fu_569_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln17_2_reg_818 <= grp_fu_356_p2;
                mul_ln17_reg_811 <= grp_fu_344_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                mul_ln38_reg_866 <= grp_fu_400_p2;
                mul_ln39_reg_872 <= grp_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                mul_ln39_1_reg_959 <= grp_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                mul_ln58_reg_977 <= grp_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                tmp_reg_972 <= tmp_fu_598_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_6_fu_647_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                trunc_ln77_reg_1001 <= trunc_ln77_fu_658_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                x_V_2_reg_996 <= x_V_2_fu_652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                y_V_1_reg_967 <= y_V_1_fu_588_p2;
            end if;
        end if;
    end process;
    convWidth_cast_reg_855(61 downto 32) <= "000000000000000000000000000000";
    sext_ln73_1_reg_897(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state34, ap_CS_fsm_state9, icmp_ln1027_fu_526_p2, ap_CS_fsm_state16, icmp_ln1027_2_fu_583_p2, ap_CS_fsm_state26, icmp_ln1027_6_fu_647_p2, grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done, grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_done, gmem_AWREADY, gmem_WREADY, gmem_ARREADY, gmem_RVALID, gmem_BVALID, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state27)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln1027_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln1027_6_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    acc_2_fu_684_p3 <= 
        ap_const_lv32_0 when (and_ln96_fu_679_p2(0) = '1') else 
        acc_fu_666_p2;
    acc_fu_666_p2 <= std_logic_vector(unsigned(gmem_addr_read_reg_988) + unsigned(grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_acc_2_out));
    add_ln1027_4_fu_521_p2 <= std_logic_vector(unsigned(phi_mul_fu_144) + unsigned(sext_ln43_reg_887));
    add_ln1027_fu_516_p0 <= phi_mul147_fu_140;
    add_ln1027_fu_516_p2 <= std_logic_vector(signed(add_ln1027_fu_516_p0) + signed(convWidth_cast_reg_855));
    add_ln58_1_fu_619_p2 <= std_logic_vector(unsigned(mul_ln58_reg_977) + unsigned(output_r_read_reg_775));
    add_ln58_fu_474_p2 <= std_logic_vector(unsigned(zext_ln58_1_fu_470_p1) + unsigned(ap_const_lv35_7FFFFFFF8));
    add_ln73_fu_484_p2 <= std_logic_vector(unsigned(inputWidth_read_reg_742) + unsigned(ap_const_lv32_FFFFFFFE));
    add_ln840_fu_531_p2 <= std_logic_vector(unsigned(iFilter_V_fu_148) + unsigned(ap_const_lv32_1));
    and_ln96_fu_679_p2 <= (tmp_2_fu_671_p3 and apply_relu_read_reg_713);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state14 <= ap_NS_fsm(13);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done)
    begin
        if ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done)
    begin
        if ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state18_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(gmem_RVALID)
    begin
        if ((gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_done)
    begin
        if ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(gmem_WREADY)
    begin
        if ((gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state34_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state9, icmp_ln1027_fu_526_p2)
    begin
        if (((icmp_ln1027_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9, icmp_ln1027_fu_526_p2)
    begin
        if (((icmp_ln1027_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cmp_i2051307_fu_435_p2 <= "1" when (signed(sub_i_i228_fu_424_p2) > signed(ap_const_lv33_0)) else "0";
    cmp_i5691284_fu_430_p2 <= "0" when (convWidth_read_reg_726 = ap_const_lv32_0) else "1";
    cmp_i5741286_fu_395_p2 <= "0" when (convHeight_read_reg_718 = ap_const_lv32_0) else "1";

    coeff_cache_address0_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_address0, grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_address0, ap_CS_fsm_state15, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            coeff_cache_address0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            coeff_cache_address0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_address0;
        else 
            coeff_cache_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    coeff_cache_ce0_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_ce0, grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_ce0, ap_CS_fsm_state15, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            coeff_cache_ce0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_coeff_cache_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            coeff_cache_ce0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_ce0;
        else 
            coeff_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    coeff_cache_we0_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            coeff_cache_we0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_coeff_cache_we0;
        else 
            coeff_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;

    convHeight_cast_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(convHeight_read_reg_718),62));
    convWidth_cast_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(convWidth_read_reg_726),62));
    empty_57_fu_489_p3 <= 
        add_ln73_fu_484_p2 when (cmp_i2051307_fu_435_p2(0) = '1') else 
        ap_const_lv32_0;
    empty_58_fu_554_p2 <= std_logic_vector(unsigned(p_cast11_fu_550_p1) + unsigned(biases_read_reg_765));
    empty_fu_456_p3 <= 
        select_ln43_fu_448_p3 when (cmp_i5741286_reg_861(0) = '1') else 
        ap_const_lv32_0;

    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state18, gmem_addr_reg_953, ap_CS_fsm_state16, icmp_ln1027_2_fu_583_p2, grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARADDR, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARADDR, gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_ARADDR <= gmem_addr_reg_953;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            gmem_ARADDR <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem_ARADDR <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state16, icmp_ln1027_2_fu_583_p2, grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARLEN, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARLEN, gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            gmem_ARLEN <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem_ARLEN <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state16, icmp_ln1027_2_fu_583_p2, grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARVALID, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARVALID, gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            gmem_ARVALID <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem_ARVALID <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state23, gmem_AWREADY)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state34, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state16, icmp_ln1027_2_fu_583_p2, grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_RREADY, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_RREADY, gmem_RVALID, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17)
    begin
        if (((gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            gmem_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln1027_2_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            gmem_RREADY <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem_RREADY <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(ap_CS_fsm_state29, gmem_WREADY)
    begin
        if (((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_44_4_fu_280_ap_start_reg;
    grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_start_reg;
    grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_ap_start_reg;
    grp_fu_344_p0 <= grp_fu_344_p00(32 - 1 downto 0);
    grp_fu_344_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(convHeight_read_reg_718),64));
    grp_fu_344_p1 <= grp_fu_344_p10(32 - 1 downto 0);
    grp_fu_344_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(convWidth_read_reg_726),64));
    grp_fu_356_p0 <= grp_fu_356_p00(32 - 1 downto 0);
    grp_fu_356_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numChannels_read_reg_758),64));
    grp_fu_356_p1 <= grp_fu_356_p10(32 - 1 downto 0);
    grp_fu_356_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inputWidth_read_reg_742),64));
    grp_fu_368_p0 <= grp_fu_368_p00(32 - 1 downto 0);
    grp_fu_368_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numChannels_read_reg_758),96));
    grp_fu_368_p1 <= grp_fu_368_p10(64 - 1 downto 0);
    grp_fu_368_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln17_reg_811),96));
    grp_fu_380_p0 <= grp_fu_380_p00(32 - 1 downto 0);
    grp_fu_380_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(convHeight_read_reg_718),96));
    grp_fu_380_p1 <= grp_fu_380_p10(64 - 1 downto 0);
    grp_fu_380_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln17_2_reg_818),96));

    grp_fu_400_ce_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_ce, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_400_ce <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_ce;
        else 
            grp_fu_400_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_400_p0_assign_proc : process(ap_CS_fsm_state6, convHeight_cast_fu_389_p1, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_400_p0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_400_p0 <= convHeight_cast_fu_389_p1(32 - 1 downto 0);
        else 
            grp_fu_400_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_400_p1_assign_proc : process(ap_CS_fsm_state6, convWidth_cast_fu_392_p1, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_400_p1 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_400_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_400_p1 <= convWidth_cast_fu_392_p1(32 - 1 downto 0);
        else 
            grp_fu_400_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_406_ce_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_ce, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_406_ce <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_ce;
        else 
            grp_fu_406_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_406_p0_assign_proc : process(numChannels_cast_fu_386_p1, ap_CS_fsm_state6, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_406_p0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_406_p0 <= numChannels_cast_fu_386_p1(32 - 1 downto 0);
        else 
            grp_fu_406_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_406_p1_assign_proc : process(ap_CS_fsm_state6, convHeight_cast_fu_389_p1, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_406_p1 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_grp_fu_406_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_406_p1 <= convHeight_cast_fu_389_p1(32 - 1 downto 0);
        else 
            grp_fu_406_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_615_ce_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state21, grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done, gmem_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            grp_fu_615_ce <= ap_const_logic_1;
        else 
            grp_fu_615_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_615_p1 <= sext_ln73_1_reg_897(35 - 1 downto 0);
    icmp_ln1027_1_fu_497_p2 <= "1" when (convWidth_read_reg_726 = ap_const_lv32_0) else "0";
    icmp_ln1027_2_fu_583_p2 <= "1" when (signed(sub_i_i399_reg_877) > signed(zext_ln1027_fu_579_p1)) else "0";
    icmp_ln1027_3_fu_502_p2 <= "1" when (inputWidth_read_reg_742 = ap_const_lv32_0) else "0";
    icmp_ln1027_6_fu_647_p2 <= "1" when (signed(sub_i_i228_reg_882) > signed(zext_ln1027_1_fu_643_p1)) else "0";
    icmp_ln1027_fu_526_p2 <= "1" when (iFilter_V_fu_148 = numFilters_read_reg_753) else "0";
    inputHeight_cast_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inputHeight_read_reg_736),33));
    inputWidth_cast_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inputWidth_read_reg_742),33));
    numChannels_cast_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numChannels_read_reg_758),62));
    p_cast11_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_542_p3),64));
        p_cast_cast_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_fu_559_p4),64));

    p_cast_fu_559_p4 <= empty_58_fu_554_p2(63 downto 2);

    row_buffer_address0_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_address0, grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_address0, ap_CS_fsm_state17, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            row_buffer_address0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            row_buffer_address0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_address0;
        else 
            row_buffer_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    row_buffer_ce0_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_ce0, grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_ce0, ap_CS_fsm_state17, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            row_buffer_ce0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_77_10_VITIS_LOOP_80_11_VITIS_LOOP_83_12_fu_311_row_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            row_buffer_ce0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_ce0;
        else 
            row_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_buffer_we0_assign_proc : process(grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_we0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            row_buffer_we0 <= grp_Conv2D_HW_Pipeline_VITIS_LOOP_66_8_fu_295_row_buffer_we0;
        else 
            row_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln43_fu_448_p3 <= 
        trunc_ln43_fu_445_p1 when (cmp_i5691284_fu_430_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln43_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_i_i399_fu_415_p2),64));

        sext_ln73_1_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_fu_474_p2),64));

        sext_ln73_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_623_p4),64));

    shl_ln_fu_463_p3 <= (inputWidth_read_reg_742 & ap_const_lv2_0);
    sub_i_i228_fu_424_p2 <= std_logic_vector(unsigned(inputWidth_cast_fu_421_p1) + unsigned(ap_const_lv33_1FFFFFFFE));
    sub_i_i399_fu_415_p2 <= std_logic_vector(unsigned(inputHeight_cast_fu_412_p1) + unsigned(ap_const_lv33_1FFFFFFFE));
    tmp_1_fu_542_p3 <= (iFilter_V_fu_148 & ap_const_lv2_0);
    tmp_2_fu_671_p3 <= acc_fu_666_p2(31 downto 31);
    tmp_fu_598_p2 <= std_logic_vector(unsigned(phi_mul_fu_144) + unsigned(zext_ln58_fu_594_p1));
    trunc_ln1_fu_623_p4 <= add_ln58_1_fu_619_p2(63 downto 2);
    trunc_ln43_fu_445_p1 <= mul_ln38_reg_866(32 - 1 downto 0);
    trunc_ln77_fu_658_p1 <= x_V_reg_269(17 - 1 downto 0);
    x_V_2_fu_652_p2 <= std_logic_vector(unsigned(x_V_reg_269) + unsigned(ap_const_lv32_1));
    y_V_1_fu_588_p2 <= std_logic_vector(unsigned(y_V_reg_257) + unsigned(ap_const_lv32_1));
    zext_ln1027_1_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_V_reg_269),33));
    zext_ln1027_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_257),33));
    zext_ln58_1_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_463_p3),35));
    zext_ln58_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_257),64));
end behav;
