// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_109_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        acc_3_7_reload,
        acc_2_7_reload,
        acc_1_7_reload,
        acc_0_7_reload,
        iFilterBase,
        numFilters,
        biases,
        tobool,
        sub93,
        sub,
        zext_ln83,
        trunc_ln119_cast,
        output_r,
        acc_3_9_out_i,
        acc_3_9_out_o,
        acc_3_9_out_o_ap_vld,
        acc_2_9_out_i,
        acc_2_9_out_o,
        acc_2_9_out_o_ap_vld,
        acc_1_9_out_i,
        acc_1_9_out_o,
        acc_1_9_out_o_ap_vld,
        acc_0_8_out_i,
        acc_0_8_out_o,
        acc_0_8_out_o_ap_vld,
        grp_fu_484_p_din0,
        grp_fu_484_p_din1,
        grp_fu_484_p_dout0,
        grp_fu_484_p_ce,
        grp_fu_512_p_din0,
        grp_fu_512_p_din1,
        grp_fu_512_p_dout0,
        grp_fu_512_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [31:0] acc_3_7_reload;
input  [31:0] acc_2_7_reload;
input  [31:0] acc_1_7_reload;
input  [31:0] acc_0_7_reload;
input  [31:0] iFilterBase;
input  [31:0] numFilters;
input  [63:0] biases;
input  [0:0] tobool;
input  [31:0] sub93;
input  [31:0] sub;
input  [31:0] zext_ln83;
input  [31:0] trunc_ln119_cast;
input  [63:0] output_r;
input  [31:0] acc_3_9_out_i;
output  [31:0] acc_3_9_out_o;
output   acc_3_9_out_o_ap_vld;
input  [31:0] acc_2_9_out_i;
output  [31:0] acc_2_9_out_o;
output   acc_2_9_out_o_ap_vld;
input  [31:0] acc_1_9_out_i;
output  [31:0] acc_1_9_out_o;
output   acc_1_9_out_o_ap_vld;
input  [31:0] acc_0_8_out_i;
output  [31:0] acc_0_8_out_o;
output   acc_0_8_out_o_ap_vld;
output  [31:0] grp_fu_484_p_din0;
output  [31:0] grp_fu_484_p_din1;
input  [31:0] grp_fu_484_p_dout0;
output   grp_fu_484_p_ce;
output  [31:0] grp_fu_512_p_din0;
output  [31:0] grp_fu_512_p_din1;
input  [31:0] grp_fu_512_p_dout0;
output   grp_fu_512_p_ce;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;
reg[31:0] acc_3_9_out_o;
reg acc_3_9_out_o_ap_vld;
reg[31:0] acc_2_9_out_o;
reg acc_2_9_out_o_ap_vld;
reg[31:0] acc_1_9_out_o;
reg acc_1_9_out_o_ap_vld;
reg[31:0] acc_0_8_out_o;
reg acc_0_8_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln111_reg_606;
reg    ap_block_state2_io;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg   [0:0] icmp_ln111_reg_606_pp0_iter7_reg;
reg    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
reg   [0:0] icmp_ln111_reg_606_pp0_iter8_reg;
reg    ap_block_state10_io;
wire    ap_block_state11_pp0_stage0_iter10;
reg   [0:0] icmp_ln111_reg_606_pp0_iter9_reg;
reg    ap_block_state11_io;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
reg   [0:0] icmp_ln111_reg_606_pp0_iter14_reg;
reg    ap_block_state16_pp0_stage0_iter15;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_270_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_R;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_pp0_stage0_11001;
wire   [33:0] trunc_ln119_cast_cast_fu_230_p1;
reg   [33:0] trunc_ln119_cast_cast_reg_579;
wire   [32:0] zext_ln83_cast_fu_234_p1;
reg   [32:0] zext_ln83_cast_reg_584;
wire   [1:0] trunc_ln110_fu_282_p1;
reg   [1:0] trunc_ln110_reg_593;
reg   [1:0] trunc_ln110_reg_593_pp0_iter1_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter2_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter3_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter4_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter5_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter6_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter7_reg;
reg   [1:0] trunc_ln110_reg_593_pp0_iter8_reg;
wire  signed [31:0] add_ln_fu_296_p3;
wire   [0:0] icmp_ln111_fu_304_p2;
reg   [0:0] icmp_ln111_reg_606_pp0_iter1_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter2_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter3_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter4_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter5_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter6_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter10_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter11_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter12_reg;
reg   [0:0] icmp_ln111_reg_606_pp0_iter13_reg;
reg   [63:0] gmem_addr_reg_610;
reg  signed [31:0] mul_ln119_reg_616;
reg   [31:0] mul_ln119_1_reg_621;
wire   [33:0] add_ln119_1_fu_377_p2;
reg   [33:0] add_ln119_1_reg_626;
reg   [63:0] gmem_addr_2_reg_631;
reg   [63:0] gmem_addr_2_reg_631_pp0_iter6_reg;
reg   [63:0] gmem_addr_2_reg_631_pp0_iter7_reg;
reg   [63:0] gmem_addr_2_reg_631_pp0_iter8_reg;
reg   [31:0] gmem_addr_read_reg_637;
wire   [31:0] acc_3_7_fu_465_p3;
reg   [31:0] acc_3_7_reg_642;
wire   [31:0] acc_3_fu_500_p3;
reg   [31:0] acc_3_reg_647;
wire   [31:0] acc_3_4_fu_508_p3;
reg   [31:0] acc_3_4_reg_652;
wire   [31:0] acc_3_5_fu_516_p3;
reg   [31:0] acc_3_5_reg_657;
wire   [31:0] acc_3_6_fu_524_p3;
reg   [31:0] acc_3_6_reg_662;
wire  signed [63:0] sext_ln113_fu_340_p1;
wire  signed [63:0] sext_ln119_fu_408_p1;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] ap_sig_allocacmp_acc_3_9_out_load;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_acc_2_9_out_load;
reg   [31:0] ap_sig_allocacmp_acc_1_9_out_load;
reg   [31:0] ap_sig_allocacmp_acc_0_8_out_load;
reg   [2:0] pf_fu_120;
wire   [2:0] add_ln109_fu_276_p2;
reg   [2:0] ap_sig_allocacmp_pf_1;
wire   [29:0] tmp_1_fu_286_p4;
wire   [33:0] shl_ln1_fu_310_p4;
wire   [63:0] zext_ln113_fu_320_p1;
wire   [63:0] add_ln113_fu_324_p2;
wire   [61:0] trunc_ln8_fu_330_p4;
wire   [32:0] zext_ln119_fu_365_p1;
wire   [32:0] add_ln119_fu_368_p2;
wire   [33:0] zext_ln119_1_fu_373_p1;
wire   [35:0] shl_ln2_fu_382_p3;
wire   [63:0] zext_ln119_2_fu_389_p1;
wire   [63:0] add_ln119_2_fu_393_p2;
wire   [61:0] trunc_ln9_fu_398_p4;
wire   [31:0] tmp_2_fu_434_p6;
wire   [31:0] add_ln113_1_fu_447_p2;
wire   [0:0] tmp_fu_452_p3;
wire   [0:0] and_ln115_fu_460_p2;
wire   [0:0] sel_tmp6_fu_478_p2;
wire   [0:0] sel_tmp7_fu_483_p2;
wire   [0:0] tmp19_fu_488_p2;
wire   [0:0] sel_tmp_fu_473_p2;
wire   [0:0] sel_tmp9_fu_494_p2;
reg    grp_fu_350_ce;
reg    grp_fu_361_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Conv2D_HW_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U85(
    .din0(ap_sig_allocacmp_acc_0_8_out_load),
    .din1(ap_sig_allocacmp_acc_1_9_out_load),
    .din2(ap_sig_allocacmp_acc_2_9_out_load),
    .din3(ap_sig_allocacmp_acc_3_9_out_load),
    .din4(trunc_ln110_reg_593_pp0_iter8_reg),
    .dout(tmp_2_fu_434_p6)
);

Conv2D_HW_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter14_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln109_fu_270_p2 == 1'd0))) begin
            pf_fu_120 <= add_ln109_fu_276_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            pf_fu_120 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter8_reg == 1'd1))) begin
        acc_3_4_reg_652 <= acc_3_4_fu_508_p3;
        acc_3_5_reg_657 <= acc_3_5_fu_516_p3;
        acc_3_6_reg_662 <= acc_3_6_fu_524_p3;
        acc_3_7_reg_642 <= acc_3_7_fu_465_p3;
        acc_3_reg_647 <= acc_3_fu_500_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_606_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln119_1_reg_626 <= add_ln119_1_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        gmem_addr_2_reg_631_pp0_iter6_reg <= gmem_addr_2_reg_631;
        gmem_addr_2_reg_631_pp0_iter7_reg <= gmem_addr_2_reg_631_pp0_iter6_reg;
        gmem_addr_2_reg_631_pp0_iter8_reg <= gmem_addr_2_reg_631_pp0_iter7_reg;
        icmp_ln111_reg_606_pp0_iter10_reg <= icmp_ln111_reg_606_pp0_iter9_reg;
        icmp_ln111_reg_606_pp0_iter11_reg <= icmp_ln111_reg_606_pp0_iter10_reg;
        icmp_ln111_reg_606_pp0_iter12_reg <= icmp_ln111_reg_606_pp0_iter11_reg;
        icmp_ln111_reg_606_pp0_iter13_reg <= icmp_ln111_reg_606_pp0_iter12_reg;
        icmp_ln111_reg_606_pp0_iter14_reg <= icmp_ln111_reg_606_pp0_iter13_reg;
        icmp_ln111_reg_606_pp0_iter2_reg <= icmp_ln111_reg_606_pp0_iter1_reg;
        icmp_ln111_reg_606_pp0_iter3_reg <= icmp_ln111_reg_606_pp0_iter2_reg;
        icmp_ln111_reg_606_pp0_iter4_reg <= icmp_ln111_reg_606_pp0_iter3_reg;
        icmp_ln111_reg_606_pp0_iter5_reg <= icmp_ln111_reg_606_pp0_iter4_reg;
        icmp_ln111_reg_606_pp0_iter6_reg <= icmp_ln111_reg_606_pp0_iter5_reg;
        icmp_ln111_reg_606_pp0_iter7_reg <= icmp_ln111_reg_606_pp0_iter6_reg;
        icmp_ln111_reg_606_pp0_iter8_reg <= icmp_ln111_reg_606_pp0_iter7_reg;
        icmp_ln111_reg_606_pp0_iter9_reg <= icmp_ln111_reg_606_pp0_iter8_reg;
        trunc_ln110_reg_593_pp0_iter2_reg <= trunc_ln110_reg_593_pp0_iter1_reg;
        trunc_ln110_reg_593_pp0_iter3_reg <= trunc_ln110_reg_593_pp0_iter2_reg;
        trunc_ln110_reg_593_pp0_iter4_reg <= trunc_ln110_reg_593_pp0_iter3_reg;
        trunc_ln110_reg_593_pp0_iter5_reg <= trunc_ln110_reg_593_pp0_iter4_reg;
        trunc_ln110_reg_593_pp0_iter6_reg <= trunc_ln110_reg_593_pp0_iter5_reg;
        trunc_ln110_reg_593_pp0_iter7_reg <= trunc_ln110_reg_593_pp0_iter6_reg;
        trunc_ln110_reg_593_pp0_iter8_reg <= trunc_ln110_reg_593_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln111_reg_606_pp0_iter1_reg <= icmp_ln111_reg_606;
        trunc_ln110_reg_593_pp0_iter1_reg <= trunc_ln110_reg_593;
        trunc_ln119_cast_cast_reg_579[31 : 0] <= trunc_ln119_cast_cast_fu_230_p1[31 : 0];
        zext_ln83_cast_reg_584[31 : 0] <= zext_ln83_cast_fu_234_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_606_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_2_reg_631 <= sext_ln119_fu_408_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter7_reg == 1'd1))) begin
        gmem_addr_read_reg_637 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_270_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_reg_610 <= sext_ln113_fu_340_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_270_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln111_reg_606 <= icmp_ln111_fu_304_p2;
        trunc_ln110_reg_593 <= trunc_ln110_fu_282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_606_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln119_1_reg_621 <= grp_fu_512_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606 == 1'd1))) begin
        mul_ln119_reg_616 <= grp_fu_484_p_dout0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            acc_0_8_out_o = acc_0_7_reload;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
            acc_0_8_out_o = acc_3_6_reg_662;
        end else begin
            acc_0_8_out_o = acc_0_8_out_i;
        end
    end else begin
        acc_0_8_out_o = acc_0_8_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1)))) begin
        acc_0_8_out_o_ap_vld = 1'b1;
    end else begin
        acc_0_8_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            acc_1_9_out_o = acc_1_7_reload;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
            acc_1_9_out_o = acc_3_5_reg_657;
        end else begin
            acc_1_9_out_o = acc_1_9_out_i;
        end
    end else begin
        acc_1_9_out_o = acc_1_9_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1)))) begin
        acc_1_9_out_o_ap_vld = 1'b1;
    end else begin
        acc_1_9_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            acc_2_9_out_o = acc_2_7_reload;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
            acc_2_9_out_o = acc_3_4_reg_652;
        end else begin
            acc_2_9_out_o = acc_2_9_out_i;
        end
    end else begin
        acc_2_9_out_o = acc_2_9_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1)))) begin
        acc_2_9_out_o_ap_vld = 1'b1;
    end else begin
        acc_2_9_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            acc_3_9_out_o = acc_3_7_reload;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
            acc_3_9_out_o = acc_3_reg_647;
        end else begin
            acc_3_9_out_o = acc_3_9_out_i;
        end
    end else begin
        acc_3_9_out_o = acc_3_9_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1)))) begin
        acc_3_9_out_o_ap_vld = 1'b1;
    end else begin
        acc_3_9_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_270_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter14_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
        ap_sig_allocacmp_acc_0_8_out_load = acc_3_6_reg_662;
    end else begin
        ap_sig_allocacmp_acc_0_8_out_load = acc_0_8_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
        ap_sig_allocacmp_acc_1_9_out_load = acc_3_5_reg_657;
    end else begin
        ap_sig_allocacmp_acc_1_9_out_load = acc_1_9_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
        ap_sig_allocacmp_acc_2_9_out_load = acc_3_4_reg_652;
    end else begin
        ap_sig_allocacmp_acc_2_9_out_load = acc_2_9_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
        ap_sig_allocacmp_acc_3_9_out_load = acc_3_reg_647;
    end else begin
        ap_sig_allocacmp_acc_3_9_out_load = acc_3_9_out_i;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_pf_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_pf_1 = pf_fu_120;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606 == 1'd1))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter8_reg == 1'd1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter14_reg == 1'd1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter7_reg == 1'd1))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_350_ce = 1'b1;
    end else begin
        grp_fu_350_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_361_ce = 1'b1;
    end else begin
        grp_fu_361_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606 == 1'd1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter8_reg == 1'd1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter14_reg == 1'd1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter7_reg == 1'd1))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_3_4_fu_508_p3 = ((sel_tmp7_fu_483_p2[0:0] == 1'b1) ? acc_3_7_fu_465_p3 : ap_sig_allocacmp_acc_2_9_out_load);

assign acc_3_5_fu_516_p3 = ((sel_tmp6_fu_478_p2[0:0] == 1'b1) ? acc_3_7_fu_465_p3 : ap_sig_allocacmp_acc_1_9_out_load);

assign acc_3_6_fu_524_p3 = ((sel_tmp_fu_473_p2[0:0] == 1'b1) ? acc_3_7_fu_465_p3 : ap_sig_allocacmp_acc_0_8_out_load);

assign acc_3_7_fu_465_p3 = ((and_ln115_fu_460_p2[0:0] == 1'b1) ? 32'd0 : add_ln113_1_fu_447_p2);

assign acc_3_fu_500_p3 = ((sel_tmp9_fu_494_p2[0:0] == 1'b1) ? ap_sig_allocacmp_acc_3_9_out_load : acc_3_7_fu_465_p3);

assign add_ln109_fu_276_p2 = (ap_sig_allocacmp_pf_1 + 3'd1);

assign add_ln113_1_fu_447_p2 = (gmem_addr_read_reg_637 + tmp_2_fu_434_p6);

assign add_ln113_fu_324_p2 = (zext_ln113_fu_320_p1 + biases);

assign add_ln119_1_fu_377_p2 = (zext_ln119_1_fu_373_p1 + trunc_ln119_cast_cast_reg_579);

assign add_ln119_2_fu_393_p2 = (zext_ln119_2_fu_389_p1 + output_r);

assign add_ln119_fu_368_p2 = (zext_ln83_cast_reg_584 + zext_ln119_fu_365_p1);

assign add_ln_fu_296_p3 = {{tmp_1_fu_286_p4}, {trunc_ln110_fu_282_p1}};

assign and_ln115_fu_460_p2 = (tobool & tmp_fu_452_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln111_reg_606_pp0_iter14_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln111_reg_606_pp0_iter7_reg == 1'd1) & (m_axi_gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln111_reg_606_pp0_iter14_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state10_io)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln111_reg_606_pp0_iter7_reg == 1'd1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln111_reg_606_pp0_iter14_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state10_io)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln111_reg_606_pp0_iter7_reg == 1'd1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_AWREADY == 1'b0) & (icmp_ln111_reg_606_pp0_iter8_reg == 1'd1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_WREADY == 1'b0) & (icmp_ln111_reg_606_pp0_iter9_reg == 1'd1));
end

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage0_iter15 = ((icmp_ln111_reg_606_pp0_iter14_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln111_reg_606 == 1'd1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter8 = ((icmp_ln111_reg_606_pp0_iter7_reg == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_484_p_ce = grp_fu_350_ce;

assign grp_fu_484_p_din0 = sub93;

assign grp_fu_484_p_din1 = add_ln_fu_296_p3;

assign grp_fu_512_p_ce = grp_fu_361_ce;

assign grp_fu_512_p_din0 = mul_ln119_reg_616;

assign grp_fu_512_p_din1 = sub;

assign icmp_ln109_fu_270_p2 = ((ap_sig_allocacmp_pf_1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_304_p2 = ((add_ln_fu_296_p3 < numFilters) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = gmem_addr_reg_610;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_2_reg_631_pp0_iter8_reg;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = acc_3_7_reg_642;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign sel_tmp6_fu_478_p2 = ((trunc_ln110_reg_593_pp0_iter8_reg == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_483_p2 = ((trunc_ln110_reg_593_pp0_iter8_reg == 2'd2) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_494_p2 = (tmp19_fu_488_p2 | sel_tmp_fu_473_p2);

assign sel_tmp_fu_473_p2 = ((trunc_ln110_reg_593_pp0_iter8_reg == 2'd0) ? 1'b1 : 1'b0);

assign sext_ln113_fu_340_p1 = $signed(trunc_ln8_fu_330_p4);

assign sext_ln119_fu_408_p1 = $signed(trunc_ln9_fu_398_p4);

assign shl_ln1_fu_310_p4 = {{{tmp_1_fu_286_p4}, {trunc_ln110_fu_282_p1}}, {2'd0}};

assign shl_ln2_fu_382_p3 = {{add_ln119_1_reg_626}, {2'd0}};

assign tmp19_fu_488_p2 = (sel_tmp7_fu_483_p2 | sel_tmp6_fu_478_p2);

assign tmp_1_fu_286_p4 = {{iFilterBase[31:2]}};

assign tmp_fu_452_p3 = add_ln113_1_fu_447_p2[32'd31];

assign trunc_ln110_fu_282_p1 = ap_sig_allocacmp_pf_1[1:0];

assign trunc_ln119_cast_cast_fu_230_p1 = trunc_ln119_cast;

assign trunc_ln8_fu_330_p4 = {{add_ln113_fu_324_p2[63:2]}};

assign trunc_ln9_fu_398_p4 = {{add_ln119_2_fu_393_p2[63:2]}};

assign zext_ln113_fu_320_p1 = shl_ln1_fu_310_p4;

assign zext_ln119_1_fu_373_p1 = add_ln119_fu_368_p2;

assign zext_ln119_2_fu_389_p1 = shl_ln2_fu_382_p3;

assign zext_ln119_fu_365_p1 = mul_ln119_1_reg_621;

assign zext_ln83_cast_fu_234_p1 = zext_ln83;

always @ (posedge ap_clk) begin
    trunc_ln119_cast_cast_reg_579[33:32] <= 2'b00;
    zext_ln83_cast_reg_584[32] <= 1'b0;
end

endmodule //Conv2D_HW_Conv2D_HW_Pipeline_VITIS_LOOP_109_15
